Q: I am using UIOP and/or SHMIOP and I see artifacts left in the filesystem after a server crash. How do I deal with that?

A: >
 UIOP uses filesystem tokens to identify endpoints. By default these are named <b>/tmp/TAO<i>something</i></b>, but they can also be whatever you specify. When your server ORB is shut down, it will clean up the token associated with any UIOP or SHMIOP transport. However on a crash, the endpoint token remains in the filesystem, and will cause a re-run of the server to fail. SHMIOP uses a filesystem entry per connection which serves as the shared memory identifier.
 
 <p>If you are using a well known UIOP endpoint, such as <b>/tmp/my_uiop_endpoint</b>, you can simply delete the named file in your server startup, before invoking <code>CORBA::ORB_init()</code>. This is easily done using <code>ACE_OS::unlink("/tmp/my_uiop_endpoint")</code>. When using generated endpoints, the files to clean up are anmed /tmp/TAO*. As long as you have no other servers running with UIOP, then just delete all instances of <b>/tmp/TAO*</b>. Otherwise you can use the catior (or tao_catior if catior isn't found) to determine which of the <b>/tmp/TAO*</b> rendesvous points are still active.
 
 <p>Identifying leftovers from a crashed SHMIOP session is a little more difficult. The default name for the identifier is <b>/tmp/MEM_Acceptor_<i>port</i>_<i>uniqueid</i></b> where port is the port number used for the connection establishment and the uniqueid is something that futher distinguishes a specific instance of the connection. For example <b>/tmp/MEM_Acceptor_55957_0x65754014330</b>. The SHMIOP Factory takes a <code>"-MMAPFilePrefix=..."</code> option to override the use of <b>/tmp/MEM_Acceptor_</b>. As with the UIOP endpoints, you can simply delete these files from your filesystem after a crash. Also like UIOP, these temporary files are cleaned up when the connection is successfully closed.
